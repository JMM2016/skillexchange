const express = require('express')
//const path = require("path")
const User = require('../models/user')

//const Ratings = (app) => {
const router = express.Router();

const addUser = (data) => {
  let newUser = new User({
    email: data.email,
    password: "test",
    rating: 0,
    numOfRatings: 0
    // contracts: {
    //   otherUsersEmail: "..",
    //   title: data.title,
    //   body: data.body,
    //   active: false,
    //   accepted: false,
    //   dueDate: "2017-07-29"
    // }
  })

  newUser.save( (err, user) => {
    if (err) return console.error(err);
    console.log("newly saved user: " + user);
  }).catch(err => console.error(err))
}

const updateUser = (userData, updateData) => {
  // let update = {$push: {contracts: {otherUsersEmail: entEmail}}};

  User.findOneAndUpdate({email: userData.currEmail}, updateData, (err, found) => {
    if (err) return console.error(err);

    // provides the updated user but data is pre-update
    console.log("user, pre update: " + JSON.stringify(found))

    User.findOne({email: userData.currEmail}, (err, user) => {
      if (err) return console.error(err);

      console.log("user, after update: " + user);
    })
  })
}


router.get('/test', (req, res) => {

  addUser({
    email: "jax@aol.com",
    //otherEmail: "frank@aol.com",
    title: "Video lessons",
    body: "We'll trade 3 hours of video lessons for 3 hours of cooking lessons. Due by the end of August 2017"
  })

  res.json({reply: '/api/ratings/test GET worked!'})
})


//router.post('/:id?', (req, res) => {
router.post('/old/:id', (req, res) => {
  //console.log("req.params: " + JSON.stringify(req.params.id));

  //let data = Object.keys(req.body);
  //x = x[0];
  console.log("post /:id - req.body: " + JSON.stringify(req.body));

  // console.log("req.body: " + JSON.stringify(req.body));

  // let foundUser = User.findOne({ 'email': 'aar@aol.com'});
  // foundUser.select('email rating')
  // foundUser.exec((err, user) => {
  //   if (err) {
  //     console.log(err)
  //   }
  //   else {
  //     console.log("foundUser: " + user);
  //   }
  // })

  let rating = req.body.rating;
  let email = req.body.email;

  //User.update({"email": "aar@aol.com"}, {$set: {rating: parseFloat(x)}}, (err, numAffected) => {
  //User.update({"email": email}, {$set: {rating: rating}}, (err, numAffected) => {
  //   if (err) {
  //     throw err;
  //   }
  //   console.log("numAffected: " + JSON.stringify(numAffected))
  //
  //   User.findOne( {"email": "aar@aol.com"}, 'email rating', (err, user) =>{
  //     if (err) {
  //       throw err;
  //     }
  //     console.log("User.findOne user: " + user);
  //   })
  // })

  let query = {'email': req.body.email};
  let update = {$set: {rating: rating}};

  // User.findOneAndUpdate(query, update, (err, doc) => {
  //   if (err) {
  //     console.log(err)
  //   }
  //   else {
  //     // provides the updated User but data is pre-update
  //     console.log("updated this: " + doc)
  //
  //     User.findOne( {"email": "aar@aol.com"}, 'email rating', (err, user) =>{
  //       if (err) {
  //         throw err;
  //       }
  //       console.log("User.findOne user: " + user);
  //     })
  //   }
  // })

  res.json("from POST /old/:id -  " + req.body);//s.id);
});


router.post('/test', (req, res) => {
  res.json({"aKey": "some response data from api/test"})
})


router.post('/user', (req, res) => {
  //console.log("/user (post) - req.params: " + JSON.stringify(req.params));
  console.log("/user (post) - req.body: " + JSON.stringify(req.body));

  let currEmail = req.body.currentUserEmail;
  let entEmail = req.body.enteredEmail;

  // let newUser = new User({
  //   email: "migs@aol.com",
  //   password: "test"
  // })
  //
  // newUser.save( (err, user) => {
  //   if (err) return console.error(err);
  //   console.log("new save user: " + user);
  // })

  // User.findOne({"email": currEmail}, (err, found) => {
  //   if (err) {
  //     throw err;
  //   }
  //   console.log("found user: " + JSON.stringify(found))
  //
  //   // User.findOne( {"email": "aar@aol.com"}, 'email rating', (err, user) =>{
  //   //   if (err) {
  //   //     throw err;
  //   //   }
  //   //   console.log("User.findOne user: " + user);
  //   // })
  // }).then( (foundUser) => {
  //   console.log("Boom. fUsr: " + JSON.stringify(foundUser))
  //   foundUser.update({"email": currEmail}, {rating: -7}, (err, user) => {
  //     console.log("updated user: " + JSON.stringify(user))
  //   })
  // })

  let update = {$push: {contracts: {otherUsersEmail: entEmail}}};
  //let update = {$set: {rating: 9}};
  // User.findOneAndUpdate(query, update, (err, doc) => {

  // User.findOneAndUpdate({email: currEmail}, update, (err, found) => {
  //   if (err) return console.error(err);
  //
  //   // provides the updated user but data is pre-update
  //   console.log("user, pre update: " + JSON.stringify(found))
  //
  //   User.findOne({email: currEmail}, (err, user) => {
  //     if (err) return console.error(err);
  //
  //     console.log("user, after update: " + user);
  //   })
  // })
    // .then( (found) => {
    // })

  res.json({reply: '/api/ratings/user POST worked!'})
})


router.post('/check-contract', (req, res) => {
  // check if the entered user's email is in the current user's contracts

  let otherEm = req.body.enteredEmail;

  // addUser({
  //   email: "tom@aol.com",
  //   otherEmail: otherEm,
  //   title: "Video lessons",
  //   body: "We'll trade 3 hours of video lessons for 3 hours of cooking lessons. Due by the end of August 2017"
  // })

  let currUserEm = req.body.currentUserEmail;

  console.log("current user's email: " + currUserEm);

  // find current user
  User.findOne({email: currUserEm}, (err, user) => {
    if (err) return console.error(err);

    //console.log("user in findOne: " + user);
  }) // search in current user's contracts
    .then( (found) => {

      console.log("other email: " + otherEm)

      // let contracts = Array.from(found.contracts)
      // console.log("boom! found - cntrt: " +  contracts)
      foundContract = found.contracts.filter((contract) => {
        return contract.otherUsersEmail === otherEm
      })

      console.log("foundContract: " + foundContract.length);

      if (foundContract.length !== 0) {
        res.json({"found": true })
      }
      else {
        res.json({"found": false })
      }

    // found.findOne({contracts: {otherUsersEmail: "y@u.co"}}, (err, found) => {
    //   if (err) return console.error(err);
    //
    //   console.log("found in find: " + user);
    // })

  })

  //res.json({response: '/api/ratings/check-contract POST worked!'})
})

  //app.use('/api', router);
//}

module.exports = router;

